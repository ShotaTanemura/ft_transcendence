openapi: '3.0.2'
info:
  title: Pong API
  description: "Pong用のAPIです"
  version: '1.0'
servers:
  - url: http://localhost:8080
paths:
   /api/v1/auth/sign-up:
    post:
      summary: "ユーザーによるサインアップ"
      description: "ユーザーによるサインアップ"
      requestBody:
        content:
          "application/json":
            schema:
                $ref: "#/components/schemas/postSignUpRequest"
        required: true
      responses:
        "201":
          description: ユーザーによるサインアップの成功
          headers:
            Set-Cookie:
              schema:
                type: string
                description: ログイン認証用JWTトークン及びリフレッシュ用JWTトークン
                example: JWTTOKEN=jwttoken; JWTREFRESH=refresh-jwttoken Secure; HttpOnly 
          content:
              "application/json":
                schema:
                  $ref: "#/components/schemas/postSignUpResponse"
        "400":
          $ref: "#/components/responses/badRequest"
        "409":
          $ref: "#/components/responses/conflictError"
components:
  responses:
    badRequest:
      description: リクエスト内容が不正
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    conflictError:
      description: 重複するリクエスト
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
  schemas:
    postSignUpRequest:
      type: object
      properties:
        name:
          type: string
          description: ユーザー名
          example: ユーザー名
        email:
          type: string
          description: メールアドレス
          example: example@email.com
        password:
          type: string
          description: パスワード
          example: p4s$W0rd
      required:
        - name
        - email
        - password
    postSignUpResponse:
      type: object
      description: サインアップに成功
      properties:
        uuid:
         type: string
         description: 作成されたユーザーのUUID
         example: b4cf1ef4-1cab-490b-a32c-f6528f95c796

    errorMessage:
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
        status:
          description: エラーステータス
          type: string
          enum:
            - invalidParams # リクエストパラメータのバリデーションに失敗した場合
            - signUpConflict # ユーザーによるサインアップ時にコンフリクトした場合
      required:
        - message
        - status
